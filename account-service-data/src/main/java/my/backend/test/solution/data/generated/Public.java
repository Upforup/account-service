/*
 * This file is generated by jOOQ.
 */
package my.backend.test.solution.data.generated;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import my.backend.test.solution.data.generated.tables.AccountMovementTable;
import my.backend.test.solution.data.generated.tables.AccountTable;
import my.backend.test.solution.data.generated.tables.OperationTable;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1950532049;

    /**
     * The reference instance of <code>PUBLIC</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>PUBLIC.ACCOUNT</code>.
     */
    public final AccountTable ACCOUNT = my.backend.test.solution.data.generated.tables.AccountTable.ACCOUNT;

    /**
     * The table <code>PUBLIC.ACCOUNT_MOVEMENT</code>.
     */
    public final AccountMovementTable ACCOUNT_MOVEMENT = my.backend.test.solution.data.generated.tables.AccountMovementTable.ACCOUNT_MOVEMENT;

    /**
     * The table <code>PUBLIC.OPERATION</code>.
     */
    public final OperationTable OPERATION = my.backend.test.solution.data.generated.tables.OperationTable.OPERATION;

    /**
     * No further instances allowed
     */
    private Public() {
        super("PUBLIC", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        List result = new ArrayList();
        result.addAll(getSequences0());
        return result;
    }

    private final List<Sequence<?>> getSequences0() {
        return Arrays.<Sequence<?>>asList(
            Sequences.ACCOUNT_SEQ,
            Sequences.OPERATION_SEQ);
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            AccountTable.ACCOUNT,
            AccountMovementTable.ACCOUNT_MOVEMENT,
            OperationTable.OPERATION);
    }
}
